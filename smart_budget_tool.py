# -*- coding: utf-8 -*-
"""smart_budget_tool.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1s7iuTL-ndy1dhvDL91hcIcEoIjNlTMG0
"""

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt

# ----------------------
# Define allocation logic
# ----------------------
def get_allocation(income, profile):
    # Define percentage allocations based on user profile
    if profile == "Student":
        essentials_pct, savings_pct, investments_pct = 0.70, 0.05, 0.00
    elif profile == "Graduate":
        essentials_pct, savings_pct, investments_pct = 0.60, 0.15, 0.10
    elif profile == "Tier 2 Skilled Worker":
        essentials_pct, savings_pct, investments_pct = 0.55, 0.20, 0.15
    else:
        essentials_pct, savings_pct, investments_pct = 0.60, 0.10, 0.05

    discretionary_pct = 1 - (essentials_pct + savings_pct + investments_pct)

    return {
        "Essentials": income * essentials_pct,
        "Savings": income * savings_pct,
        "Investments": income * investments_pct,
        "Discretionary": income * discretionary_pct
    }

# ----------------------
# Streamlit App
# ----------------------
st.set_page_config(page_title="Smart Budget Allocation Tool", layout="centered")
st.title("ðŸ“Š Smart Budget Allocation Tool")
st.markdown("""
Use this tool to get a personalised income allocation recommendation based on your profile and monthly income.

### How to Use:
1. Enter your **monthly income** in pounds.
2. Select the **user profile** that best describes your situation.
3. Click **"Generate My Budget Plan"** to view your recommended allocations.
4. A table and pie chart will show how to best divide your income.
""")

# Inputs
income = st.number_input("Enter your monthly income (Â£):", min_value=100, max_value=10000, value=1200)
profile = st.selectbox("Select your profile:", ["Student", "Graduate", "Tier 2 Skilled Worker", "Other"])

# Calculate and Display Results
if st.button("Generate My Budget Plan"):
    allocation = get_allocation(income, profile)
    df_alloc = pd.DataFrame.from_dict(allocation, orient='index', columns=['Amount (Â£)'])
    df_alloc['% of Income'] = (df_alloc['Amount (Â£)'] / income * 100).round(1)

    st.subheader("ðŸ“‹ Recommended Allocation:")
    st.dataframe(df_alloc)

    # Pie chart
    st.subheader("ðŸ“Œ Visual Breakdown:")
    fig, ax = plt.subplots()
    ax.pie(df_alloc['Amount (Â£)'], labels=df_alloc.index, autopct='%1.1f%%', startangle=90)
    ax.axis('equal')
    st.pyplot(fig)

    st.markdown("""
    âœ… This plan is based on data from the ONS, UK student surveys, and job market insights.

    ðŸ’¡ Adjust the income or switch profiles to explore different financial scenarios.
    """)
